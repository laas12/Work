apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: esdata
  namespace: default
  labels:
    autoscaling: "False"
    autoscaling_max_cpu_percent: "80"
    autoscaling_min_replicas: "1"
    autoscaling_max_replicas: "3"
spec:
  serviceName: "esheadless"
  replicas: 1
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values: 
                    - esheadless
              topologyKey: "kubernetes.io/hostname"
      terminationGracePeriodSeconds: 10
      containers:
      - name: esdata
        image: elasticsearch:5.4.0
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
        args: ['-Enode.master=false','-Enode.data=true','-Enode.ingest=true','-Ediscovery.zen.minimum_master_nodes=2','-Enetwork.host=_eth0_','-Ecluster.name=eskube','-Ediscovery.zen.ping.unicast.hosts=esmaster-1.esheadless:9300,esmaster-0.esheadless:9300,esmaster-2.esheadless:9300']
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: ES_JAVA_OPTS
          value: "-Xms512m -Xmx512m"
        ports:
        - containerPort: 9200
          name: http
          protocol: TCP
        - containerPort: 9300
          name: election
          protocol: TCP
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: esdata
        resources:
          requests:
            memory: "512Mi"
          limits:
            memory: "800Mi"
  volumeClaimTemplates:
  - metadata:
      name: esdata
      annotations:
        volume.beta.kubernetes.io/storage-class: "example-nfs"
    spec:
      accessModes: [ "ReadWriteMany" ]
      resources:
        requests:
          storage: 1Gi
        limits:
          storage: 2Gi
